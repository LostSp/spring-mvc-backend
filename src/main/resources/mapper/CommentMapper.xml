<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.spring_mvc_backend.mapper.CommentMapper">

    <insert id="insertComment" parameterType="com.example.spring_mvc_backend.model.Comment" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO comments (post_id, user_id, username, content, created_at)
        VALUES (#{postId}, #{userId}, #{username}, #{content}, #{createdAt})
    </insert>

    <select id="selectCommentsByPostId" resultType="com.example.spring_mvc_backend.model.Comment" parameterType="long">
        SELECT id, post_id, user_id, username, content, created_at
        FROM comments
        WHERE post_id = #{postId}
        ORDER BY created_at DESC
    </select>

    <delete id="deleteComment"  parameterType="long">
        DELETE FROM comments WHERE id = #{id}
    </delete>
    <select id="selectCommentById" resultType="com.example.spring_mvc_backend.model.Comment" parameterType="long">
        SELECT id, post_id, user_id, username, content, created_at
        FROM comments
        WHERE id = #{id}
    </select>
    <select id="selectCommentsByPostIdWithLimit" resultType="com.example.spring_mvc_backend.model.Comment">
        SELECT * FROM comments
        WHERE post_id = #{postId}
        ORDER BY id ASC
        LIMIT #{limit}
    </select>

    <select id="selectCommentsByPostIdAfterCursor" resultType="com.example.spring_mvc_backend.model.Comment">
        SELECT * FROM comments
        WHERE post_id = #{postId}
        AND id > #{cursor}
        ORDER BY id ASC
        LIMIT #{limit}
    </select>


</mapper>
